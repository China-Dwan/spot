package study.thread;

public class AMain {
    /**
     * 什么是线程？什么是进程？
     * 一个程序未运行时，他是存放在硬盘上的，比如QQ.exe，在没有双击的时候，是什么都没有的；当双击exe时,一个程序运行起来后最少需要一个进程
     * 一个进程最少需要一个线程,所以说线程是程序执行流的最小单位,进程是系统进行资源分配和调度的一个独立单位;
     */

    /**
     * main方法是一个线程还是进程？
     * 当main方法运行时，一个java程序运行，它是一个进程，但进程本身相当于一个空盒，他只提供资源装在的空间，具体的执行任务是有线程来完成的，
     * 所以说main方法启动的是一个线程也是一个进程，而main方法中thread开启的线程则是这个主线程下的子线程，此时java程序为多线程
     */

    /**
     * start与run区别？
     * 当调用run()时，会创建另外一个线程，立刻跳到那个线程的执行
     * 调用start()时，会创建另外一个线程，与主线程同时运行，至于谁先运行要看CPU的调度
     */

    /**
     * 创建线程的两种方式？
     * 1，创建一个类，继承Thread
     * 2，创建一个类，实现Runnable
     */

    /**
     * 启动线程的三种方式？
     * 1，创建一个类，继承Thread
     * 2，创建一个类，实现Runnable
     * 3，通过线程池启动线程，但底层也是通过前两种方法之一创建的线程
     */

    /**
     * 锁类型？
     * 可重入锁: 再执行对象中所有同步方法不用再次获得锁
     * 可中断锁: 在等待获取锁过程中可终端
     * 公平锁: 按等待获取锁的线程的等待时间进行获取,等待时间长的优先获取锁权利
     * 读写锁: 对资源读取和写入的时候拆分为两步,读的时候可以多线程一起读,写的时候必须同步的写
     */

    /**
     * 锁粗化细化？
     * 当某段代码里面只需要一部分代码加锁时，就可以进行细化，当一段代码有很多个段有锁代码组成时，就需要粗化
     */

    /**
     * 当使用对象当锁的时候，对象属性发生变化没问题，但是不能换成其他对象
     * Object o = new A();    一旦开始执行后就不能变更o    o = new B();
     * 这样会发生问题，因为锁的相关信息是保存在对象头里面的
     */

    /**
     * 一个对象保存在堆，
     * 存储方式包括，对象头哈希码，GC分代年龄，锁状态标志，持有锁线程ID，偏向线程ID
     * 实例数据真正保存有校信息的字段，对齐填充
     */
}
